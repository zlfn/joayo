//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "user")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub user_id: Uuid,
    pub email: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::joayo::Entity")]
    Joayo,
    #[sea_orm(has_one = "super::password_identity::Entity")]
    PasswordIdentity,
    #[sea_orm(has_many = "super::session::Entity")]
    Session,
}

impl Related<super::joayo::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Joayo.def()
    }
}

impl Related<super::password_identity::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PasswordIdentity.def()
    }
}

impl Related<super::session::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Session.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
