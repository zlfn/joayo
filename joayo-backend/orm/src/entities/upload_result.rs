//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "upload_result")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub joayo_id: Uuid,
    pub original_size: i32,
    pub file_size: Option<i32>,
    pub object_url: Option<String>,
    pub result: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::joayo::Entity",
        from = "Column::JoayoId",
        to = "super::joayo::Column::JoayoId",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Joayo,
}

impl Related<super::joayo::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Joayo.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
