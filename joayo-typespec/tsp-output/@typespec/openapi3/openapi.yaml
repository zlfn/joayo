openapi: 3.0.0
info:
  title: JOAYO API
  version: 0.0.0
  description: |-
    ## JOAYO API DOCS
    JOAYO의 API 문서입니다.

    ### 기본적인 응답형태
    모든 응답은 기본적으로 아래와 같은 형태로 주어집니다.
    ```ts
    {
        "type": "Ok" | "Error",
        "data": Object | null | string
    }
    ```

    * `type`: `"Ok"`나 `"Error"`로 요청의 성공 여부를 나타냅니다.  
    * `data`: 요청이 성공했을 경우 요청한 데이터의 객체 혹은 응답 데이터가 없는 요청의 경우 `null`이 주어집니다.  
    		  요청이 실패했을 경우 `string`으로 상세 에러코드가 주어집니다.

    ### JSON 에러
    서버가 JSON의 파싱에 실패했을 경우, 아래와 같은 응답이 주어집니다.
    ```ts
    {
        "type": "Error",
        "data": JsonErrorType as string
    }
    ```

    `JsonErrorType`으로 주어질 수 있는 값은 아래와 같습니다.
    * `"JsonDataError"`: JSON의 형태가 필요로 하는 형식과 맞지 않을 경우
    * `"JsonSyntaxError"`: JSON의 문법이 틀린 경우
    * `"JsonContentTypeError"`: HTTP 헤더의 `Content-Type`이 `application/json`이 아닌 경우
    * `"JsonBytesError"`: 서버가 JSON 파싱 중에 Rust의 `Bytes` 와 관련된 오류를 일으킨 경우
  contact:
    name: zlfn
    email: ung@zlfn.space
tags:
  - name: user
paths:
  /password:
    put:
      operationId: change_password
      summary: 비밀번호 변경
      description: |-
        세션에 대응하는 유저의 비밀번호를 변경합니다.

        유저의 모든 세션을 삭제하고, 새 세션을 발급하여 `set-cookie` 헤더를 통해 전달합니다.
      parameters: []
      responses:
        '200':
          description: 비밀번호 변경에 성공했습니다.
          headers:
            set-cookie:
              required: true
              schema:
                type: string
                enum:
                  - session_id={your_session_id}
          content:
            application/json:
              schema:
                type: object
                required:
                  - type
                  - data
                properties:
                  type:
                    type: string
                    enum:
                      - Ok
                    description: '`Ok`나 `Error`로 요청의 성공여부를 나타냅니다.'
                  data:
                    nullable: true
                    description: 요청한 데이터입니다.
        '401':
          description: '`session_id` 쿠키가 없거나 세션이 만료되었습니다.'
          content:
            application/json:
              schema:
                type: object
                required:
                  - type
                  - data
                properties:
                  type:
                    type: string
                    enum:
                      - Error
                    description: '`Ok`나 `Error`로 요청의 성공여부를 나타냅니다.'
                  data:
                    type: string
                    enum:
                      - SessionInvalid
                    description: 오류의 유형입니다.
        '403':
          description: 기존 비밀번호가 틀렸습니다.
          content:
            application/json:
              schema:
                type: object
                required:
                  - type
                  - data
                properties:
                  type:
                    type: string
                    enum:
                      - Error
                    description: '`Ok`나 `Error`로 요청의 성공여부를 나타냅니다.'
                  data:
                    type: string
                    enum:
                      - WrongOldPassword
                    description: 오류의 유형입니다.
        '422':
          description: 새 비밀번호가 8~128 바이트가 아닙니다.
          content:
            application/json:
              schema:
                type: object
                required:
                  - type
                  - data
                properties:
                  type:
                    type: string
                    enum:
                      - Error
                    description: '`Ok`나 `Error`로 요청의 성공여부를 나타냅니다.'
                  data:
                    type: string
                    enum:
                      - BadNewPassword
                    description: 오류의 유형입니다.
        '500':
          description: 내부 서버 오류입니다.
          content:
            application/json:
              schema:
                type: object
                required:
                  - type
                  - data
                properties:
                  type:
                    type: string
                    enum:
                      - Error
                    description: '`Ok`나 `Error`로 요청의 성공여부를 나타냅니다.'
                  data:
                    type: string
                    enum:
                      - InternalServerError
                    description: 오류의 유형입니다.
      tags:
        - user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
      security:
        - ApiKeyAuth: []
  /session:
    post:
      operationId: get_session
      summary: 세션 발급
      description: |-
        유저의 이메일과 비밀번호를 통해 세션을 발급합니다.  
        세션은 `set-cookie` 헤더를 통해 전달되며, 유휴 만료 시간은 30분입니다.

        세션은 웹 프론트엔드 로그인을 위해 사용되며, 언제든지 사양이 변경될 가능성이 있습니다.
        외부 연동 서비스의 경우에는 토큰을 이용하세요. (구현 예정)
      parameters: []
      responses:
        '200':
          description: 세션을 발급하는데 성공했습니다.
          headers:
            set-cookie:
              required: true
              schema:
                type: string
                enum:
                  - session_id={your_session_id}
          content:
            application/json:
              schema:
                type: object
                required:
                  - type
                  - data
                properties:
                  type:
                    type: string
                    enum:
                      - Ok
                    description: '`Ok`나 `Error`로 요청의 성공여부를 나타냅니다.'
                  data:
                    nullable: true
                    description: 요청한 데이터입니다.
        '403':
          description: 이메일이나 비밀번호가 틀렸습니다.
          content:
            application/json:
              schema:
                type: object
                required:
                  - type
                  - data
                properties:
                  type:
                    type: string
                    enum:
                      - Error
                    description: '`Ok`나 `Error`로 요청의 성공여부를 나타냅니다.'
                  data:
                    type: string
                    enum:
                      - WrongIdentity
                    description: 오류의 유형입니다.
        '500':
          description: 내부 서버 오류입니다.
          content:
            application/json:
              schema:
                type: object
                required:
                  - type
                  - data
                properties:
                  type:
                    type: string
                    enum:
                      - Error
                    description: '`Ok`나 `Error`로 요청의 성공여부를 나타냅니다.'
                  data:
                    type: string
                    enum:
                      - InternalServerError
                    description: 오류의 유형입니다.
      tags:
        - user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSessionRequest'
    get:
      operationId: checkSession
      summary: 세션 확인
      description: |-
        세션이 유효한지 확인하고, 세션에 대응하는 유저의 이메일을 응답합니다.

        다른 요청과 동일하게, 세션의 유효 시간도 연장합니다.
      parameters: []
      responses:
        '200':
          description: 세션이 확인되었습니다.
          content:
            application/json:
              schema:
                type: object
                required:
                  - type
                  - data
                properties:
                  type:
                    type: string
                    enum:
                      - Ok
                    description: '`Ok`나 `Error`로 요청의 성공여부를 나타냅니다.'
                  data:
                    allOf:
                      - $ref: '#/components/schemas/CheckSessionData'
                    description: 요청한 데이터입니다.
        '401':
          description: '`session_id` 쿠키가 없거나 세션이 만료되었습니다.'
          content:
            application/json:
              schema:
                type: object
                required:
                  - type
                  - data
                properties:
                  type:
                    type: string
                    enum:
                      - Error
                    description: '`Ok`나 `Error`로 요청의 성공여부를 나타냅니다.'
                  data:
                    type: string
                    enum:
                      - SessionInvalid
                    description: 오류의 유형입니다.
        '500':
          description: 내부 서버 오류입니다.
          content:
            application/json:
              schema:
                type: object
                required:
                  - type
                  - data
                properties:
                  type:
                    type: string
                    enum:
                      - Error
                    description: '`Ok`나 `Error`로 요청의 성공여부를 나타냅니다.'
                  data:
                    type: string
                    enum:
                      - InternalServerError
                    description: 오류의 유형입니다.
      tags:
        - user
      security:
        - ApiKeyAuth: []
    delete:
      operationId: delete_session
      summary: 세션 삭제
      description: 로그인되어 있는 세션을 삭제합니다.
      parameters: []
      responses:
        '200':
          description: 세션을 삭제하는데 성공했습니다.
          content:
            application/json:
              schema:
                type: object
                required:
                  - type
                  - data
                properties:
                  type:
                    type: string
                    enum:
                      - Ok
                    description: '`Ok`나 `Error`로 요청의 성공여부를 나타냅니다.'
                  data:
                    nullable: true
                    description: 요청한 데이터입니다.
        '401':
          description: '`session_id` 쿠키가 없거나 세션이 만료되었습니다.'
          content:
            application/json:
              schema:
                type: object
                required:
                  - type
                  - data
                properties:
                  type:
                    type: string
                    enum:
                      - Error
                    description: '`Ok`나 `Error`로 요청의 성공여부를 나타냅니다.'
                  data:
                    type: string
                    enum:
                      - SessionInvalid
                    description: 오류의 유형입니다.
        '500':
          description: 내부 서버 오류입니다.
          content:
            application/json:
              schema:
                type: object
                required:
                  - type
                  - data
                properties:
                  type:
                    type: string
                    enum:
                      - Error
                    description: '`Ok`나 `Error`로 요청의 성공여부를 나타냅니다.'
                  data:
                    type: string
                    enum:
                      - InternalServerError
                    description: 오류의 유형입니다.
      tags:
        - user
      security:
        - ApiKeyAuth: []
  /user:
    post:
      operationId: createUser
      summary: 유저 생성
      description: |-
        이메일과 비밀번호로 새로운 유저를 생성합니다.

        추후 이메일 인증 전까지 계정을 활성화하지 않을 예정이 있습니다.
      parameters: []
      responses:
        '201':
          description: 유저를 생성하는데 성공했습니다.
          content:
            application/json:
              schema:
                type: object
                required:
                  - type
                  - data
                properties:
                  type:
                    type: string
                    enum:
                      - Ok
                    description: '`Ok`나 `Error`로 요청의 성공여부를 나타냅니다.'
                  data:
                    nullable: true
                    description: 요청한 데이터입니다.
        '409':
          description: 이메일이 서버에 이미 존재합니다.
          content:
            application/json:
              schema:
                type: object
                required:
                  - type
                  - data
                properties:
                  type:
                    type: string
                    enum:
                      - Error
                    description: '`Ok`나 `Error`로 요청의 성공여부를 나타냅니다.'
                  data:
                    type: string
                    enum:
                      - EmailExist
                    description: 오류의 유형입니다.
        '422':
          description: 비밀번호가 8~128 바이트가 아닙니다.
          content:
            application/json:
              schema:
                type: object
                required:
                  - type
                  - data
                properties:
                  type:
                    type: string
                    enum:
                      - Error
                    description: '`Ok`나 `Error`로 요청의 성공여부를 나타냅니다.'
                  data:
                    type: string
                    enum:
                      - BadPassword
                    description: 오류의 유형입니다.
        '500':
          description: 내부 서버 오류입니다.
          content:
            application/json:
              schema:
                type: object
                required:
                  - type
                  - data
                properties:
                  type:
                    type: string
                    enum:
                      - Error
                    description: '`Ok`나 `Error`로 요청의 성공여부를 나타냅니다.'
                  data:
                    type: string
                    enum:
                      - InternalServerError
                    description: 오류의 유형입니다.
      tags:
        - user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
components:
  schemas:
    ChangePasswordError:
      type: string
      enum:
        - BadNewPassword
        - WrongOldPassword
        - SessionInvalid
        - InternalServerError
      description: 비밀번호 변경 오류코드입니다.
    ChangePasswordRequest:
      type: object
      required:
        - old_password
        - new_password
      properties:
        old_password:
          type: string
          description: 기존 비밀번호입니다.
        new_password:
          type: string
          minLength: 8
          maxLength: 128
          description: 새 비밀번호입니다. 유니코드를 지원하며, UTF-8 기준 8~128 바이트여야 합니다.
      description: 비밀번호 변경 요청데이터입니다.
    CheckSessionData:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          description: 세션에 대응되는 유저의 이메일입니다.
      description: 세션 확인 응답데이터입니다.
    CheckSessionError:
      type: string
      enum:
        - SessionInvalid
        - InternalServerError
      description: 세션 확인 에러코드입니다.
    CreateUserError:
      type: string
      enum:
        - EmailExist
        - BadPassword
        - InternalServerError
      description: 유저 생성 오류코드입니다.
    CreateUserRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          description: 유효한 이메일 주소입니다.
        password:
          type: string
          minLength: 8
          maxLength: 128
          description: 비밀번호입니다. 유니코드를 지원하며, UTF-8 기준 8~128 바이트여야 합니다.
      description: 유저 생성 요청데이터입니다.
    DeleteSessionError:
      type: string
      enum:
        - SessionInvalid
        - InternalServerError
      description: 세션 삭제 오류코드입니다.
    GetSessionError:
      type: string
      enum:
        - WrongIdentity
        - InternalServerError
      description: 세션 발급 오류코드입니다.
    GetSessionRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          description: 세션을 발급할 유저의 이메일 주소입니다.
        password:
          type: string
          description: 세션을 발급할 유저의 비밀번호입니다.
      description: 세션 발급 요청데이터입니다.
    ServerError:
      type: string
      enum:
        - InternalServerError
    SessionError:
      type: string
      enum:
        - SessionInvalid
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: cookie
      name: session_id
servers:
  - url: https://localhost:7878
    description: ''
    variables: {}
